# generated by datamodel-codegen:
#   filename:  http://www.mingweisamuel.com/riotapi-schema/openapi-3.0.0.yml
#   timestamp: 2022-01-07T16:18:58+00:00

from __future__ import annotations

from pydantic import BaseModel, Field


class ChampionMasteryDto(BaseModel):
    championPointsUntilNextLevel: int = Field(
        ...,
        description="Number of points needed to achieve next level. Zero if player reached maximum champion level for this champion.",
    )
    chestGranted: bool = Field(..., description="Is chest granted for this champion or not in current season.")
    championId: int = Field(..., description="Champion ID for this entry.")
    lastPlayTime: int = Field(
        ...,
        description="Last time this champion was played by this player - in Unix milliseconds time format.",
    )
    championLevel: int = Field(..., description="Champion level for specified player and champion combination.")
    summonerId: str = Field(..., description="Summoner ID for this entry. (Encrypted)")
    championPoints: int = Field(
        ...,
        description="Total number of champion points for this player and champion combination - they are used to determine championLevel.",
    )
    championPointsSinceLastLevel: int = Field(
        ...,
        description="Number of points earned since current level has been achieved.",
    )
    tokensEarned: int = Field(
        ...,
        description="The token earned for this champion at the current championLevel. When the championLevel is advanced the tokensEarned resets to 0.",
    )
